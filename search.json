[{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Series system with exponentially distributed component lifetimes","text":"R package series.system.estimation.masked.data framework estimating parameters latent component lifetimes masked data series system.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"masked-data","dir":"Articles","previous_headings":"","what":"Masked data","title":"Series system with exponentially distributed component lifetimes","text":"Masked data given ..d. sample system lifetime data plausible candidate sets contain failed node. R package series.system.estimation.masked.data contains several simulated masked data sets. example, series system \\(3\\) exponentially distributed component lifetimes stored exp_series_data_1: can get help object series.system.estimation.masked.data using built-help. instance, get information data set exp_series_md_1, type ?exp_series_md_1 R console.","code":"print(exp_series_md_1) #> Latent variables:  k t1 t2 t3  #> # A tibble: 1,000 × 8 #>          t     k      t1      t2     t3 x1    x2    x3    #>      <dbl> <dbl>   <dbl>   <dbl>  <dbl> <lgl> <lgl> <lgl> #>  1 0.144       2 0.281   0.144   0.266  TRUE  TRUE  FALSE #>  2 0.0105      1 0.0105  0.0141  0.0633 TRUE  FALSE TRUE  #>  3 0.0363      2 0.105   0.0363  0.545  TRUE  TRUE  FALSE #>  4 0.00972     1 0.00972 0.251   0.0960 TRUE  FALSE TRUE  #>  5 0.0377      3 0.0937  0.0943  0.0377 TRUE  FALSE TRUE  #>  6 0.0958      3 0.283   0.391   0.0958 FALSE TRUE  TRUE  #>  7 0.169       3 0.197   1.01    0.169  FALSE TRUE  TRUE  #>  8 0.270       3 0.322   0.371   0.270  FALSE TRUE  TRUE  #>  9 0.299       3 0.390   0.401   0.299  TRUE  FALSE TRUE  #> 10 0.00794     2 0.524   0.00794 0.120  FALSE TRUE  TRUE  #> # … with 990 more rows"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"statistical-model-for-masked-data","dir":"Articles","previous_headings":"","what":"Statistical model for masked data","title":"Series system with exponentially distributed component lifetimes","text":"principle object study series system consisting \\(m\\) components. interested estimating component lifetimes masked data form candidate sets, candidate sets satisfy following set conditions: Condition \\(C_1\\): index failed component candidate set, .e., \\(\\Pr\\{K_i \\C_i\\} = 1\\). Condition \\(C_2\\): probability \\(C_i\\) given \\(K_i\\) \\(T_i\\) equally probable failed component varies components candidate set, .e., \\(\\Pr\\{C_i=c_i|K_i=j,T_i=t_i\\} = \\Pr\\{C_i=c_i|K_i=j',T_i=t_i\\}\\) \\(j,j' \\c_i\\). Condition \\(C_3\\): masking probabilities independent \\(\\boldsymbol{\\theta}\\), .e., \\(\\Pr\\{C_i=c_i|K_i=j,T_i=t_i\\}\\) function \\(\\boldsymbol{\\theta}\\). means, whatever generative mechanism underlying \\(\\mathcal{C}_1,\\ldots,\\mathcal{C}_n\\), explicit knowledge \\(\\boldsymbol{\\theta}\\), \\(\\) candidate set \\(\\mathcal{C}_i\\) may depend realizations \\(T_{1},\\ldots,T_{n}\\) factors explicitly statistical model described.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"bernoulli-candidate-model-that-satisfies-c_1-c_2-and-c_3","dir":"Articles","previous_headings":"Statistical model for masked data","what":"Bernoulli candidate model that satisfies \\(C_1\\), \\(C_2\\), and \\(C_3\\)","title":"Series system with exponentially distributed component lifetimes","text":"long satisfy conditions \\(C_1\\), \\(C_2\\), \\(C_3\\), reduced likelihood function assumes conditions obtains MLEs full likelihood function. follows, describe Bernoulli candidate set model generates candidate sets satisfy conditions. Bernoulli candidate model function component cause failure k parameters m p, component cause failure indexed j, j candidate set otherwise component indexed j candidate set probability specified p, may either procedure sampling distribution codomain [0,1] constant function. masked data, column k failed component index. integer, number components candidate set. function procedure p : integer -> [0,1], defaults function(n) runif(n).","code":"md_bernoulli_candidate_C1_C2_C3(md, m, p = function(n) runif(n)) #> function (md, m, p = function(n) runif(n))  #> { #>     stopifnot(!is.null(md$k)) #>     n <- nrow(md) #>     stopifnot(n > 0) #>     x <- matrix(NA, nrow = n, ncol = m) #>     u <- matrix(runif(m * n), nrow = n) #>     gam <- p(n) #>     for (i in 1:n) { #>         for (j in 1:m) { #>             x[i, j] <- ifelse(md$k[i] == j, T, u[i, j] < gam[i]) #>         } #>     } #>     x <- tibble::as_tibble(x) #>     colnames(x) <- paste0(\"x\", 1:m) #>     md %>% dplyr::bind_cols(x) #> } #> <bytecode: 0x555ee0058760> #> <environment: namespace:series.system.estimation.masked.data>"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"estimating-the-variance-covariance-using-the-bootstrap-method","dir":"Articles","previous_headings":"Statistical model for masked data","what":"Estimating the variance-covariance using the Bootstrap method","title":"Series system with exponentially distributed component lifetimes","text":"Alternatively, estimate \\(\\boldsymbol{\\theta}\\) \\(B\\) simulated draws MLEs satisfy \\[     \\operatorname{argmax}_{\\boldsymbol{\\theta }\\\\boldsymbol{\\Omega}} \\ell(\\boldsymbol{\\theta}|\\mathcal{D_i}) \\] \\(\\mathcal{\\boldsymbol{D_i}}\\) random sample empirical distribution \\(\\{(S_i,\\delta_i,C_i)\\}_1^n\\). call Bootstrap. Assuming solution MLE equation unique, gives us single point \\(\\hat{\\boldsymbol{\\theta}}_{()}\\) conditioned simulated masked data \\(\\boldsymbol{D_i}\\).","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"exponential-series-system","dir":"Articles","previous_headings":"","what":"Exponential series system","title":"Series system with exponentially distributed component lifetimes","text":"straightforward series system estimate series system exponentially distributed component lifetimes. Suppose exponential series system \\(m\\) components parameterized \\(\\boldsymbol{\\theta }= (1,1.25,1.5)'\\). , component assigned index \\(j\\) exponentially distributed lifetime failure rate \\(\\theta_j\\), e.g., \\(\\theta_2 = 1.25\\) failure rate component indexed \\(2\\). Let’s simulate series system (without candidate sets): , used function md_series_lifetime. get help , type ?md_series_lifetime.","code":"n <- 300 theta <- c(1,1.25,1.5) m <- length(theta)  md <- tibble(t1=rexp(n,theta[1]),              t2=rexp(n,theta[2]),              t3=rexp(n,theta[3])) %>%     md_series_lifetime() print(md) #> # A tibble: 300 × 5 #>        t1    t2    t3     k      t #>     <dbl> <dbl> <dbl> <int>  <dbl> #>  1 1.84   0.114 0.189     2 0.114  #>  2 1.65   0.602 0.542     3 0.542  #>  3 1.12   0.910 0.942     2 0.910  #>  4 1.77   0.588 1.01      2 0.588  #>  5 0.596  2.25  0.111     3 0.111  #>  6 0.801  0.860 0.146     3 0.146  #>  7 0.375  1.06  0.208     3 0.208  #>  8 0.251  0.464 0.137     3 0.137  #>  9 0.0565 0.173 0.227     1 0.0565 #> 10 1.65   0.391 1.47      2 0.391  #> # … with 290 more rows"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"candidate-sets","dir":"Articles","previous_headings":"Exponential series system","what":"Candidate sets","title":"Series system with exponentially distributed component lifetimes","text":"simulate candidate sets using Bernoulli candidate model appropriate set parameters satisfy conditions \\(C_1\\), \\(C_2\\), \\(C_3\\):","code":"md <- md %>% md_bernoulli_candidate_C1_C2_C3(m, function(n) rep(.5,n)) print(md) #> # A tibble: 300 × 8 #>        t1    t2    t3     k      t x1    x2    x3    #>     <dbl> <dbl> <dbl> <int>  <dbl> <lgl> <lgl> <lgl> #>  1 1.84   0.114 0.189     2 0.114  TRUE  TRUE  TRUE  #>  2 1.65   0.602 0.542     3 0.542  FALSE FALSE TRUE  #>  3 1.12   0.910 0.942     2 0.910  TRUE  TRUE  FALSE #>  4 1.77   0.588 1.01      2 0.588  FALSE TRUE  FALSE #>  5 0.596  2.25  0.111     3 0.111  TRUE  FALSE TRUE  #>  6 0.801  0.860 0.146     3 0.146  TRUE  FALSE TRUE  #>  7 0.375  1.06  0.208     3 0.208  TRUE  FALSE TRUE  #>  8 0.251  0.464 0.137     3 0.137  FALSE TRUE  TRUE  #>  9 0.0565 0.173 0.227     1 0.0565 TRUE  FALSE FALSE #> 10 1.65   0.391 1.47      2 0.391  FALSE TRUE  TRUE  #> # … with 290 more rows"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/articles/exponential.html","id":"log-likelihood-of-theta-given-masked-data","dir":"Articles","previous_headings":"Exponential series system","what":"Log-likelihood of \\(\\theta\\) given masked data","title":"Series system with exponentially distributed component lifetimes","text":"reduced log-likelihood function (log kernel likelihood function) given \\[ \\ell(\\theta) =     -\\left(\\sum_{=1}^{n} t_i\\right)     \\left(\\sum_{j=1}^{m} \\theta_j\\right) +     \\sum_{=1}^{n} \\log\\left(\\sum_{j \\c_i} \\theta_j\\right). \\] following log-likelihood constructor, md_loglike_exp_series_C1_C2_c3, implemented using minimally sufficient statistics, significantly improves computational efficiency computing log-likelihood. compute log-likelihood function function masked data md :","code":"l <- md_loglike_exp_series_C1_C2_C3(md) print(l) #> function (theta)  #> { #>     f <- sum.t * sum(theta) #>     for (i in 1:n) f <- f + md$n[i] * log(sum(theta[md$C[i, ]])) #>     f #> } #> <bytecode: 0x555ede21d0d8> #> <environment: 0x555ede21c4d0> knitr::knit_exit()"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Towell. Author, maintainer.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Towell (2022). series.system.estimation.masked.data: Series Systems: Estimating Lifetime Distributions Unobserved Components Masked Data. R package version 0.0.0.9000, https://queelius.github.io/series_system_estimation_masked_data/.","code":"@Manual{,   title = {series.system.estimation.masked.data: Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data},   author = {Alexander Towell},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://queelius.github.io/series_system_estimation_masked_data/}, }"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/index.html","id":"series-systems-estimating-lifetime-distributions-of-unobserved-components-with-masked-data","dir":"","previous_headings":"","what":"Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data","title":"Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data","text":"R package, series_system_estimation_masked_data, provides set functions generating MLEs lifetime parameters series systems related characteristics masked data. Masked data comes variety forms: system lifetime can masked three related ways. First, right censoring occurs system observation known survived minimum length time. Second, left censoring occurs system observation know survived maximum length time. Finally, interval censoring occurs system observation known survived minimum maximum length time. unmasked situation, know precisely long system observation survived. Regardless series system lifetime masked, lifetime components may masked ways described item (1). , additionally, another kind masking like consider. observe component lifetimes, instead given (potentially masked) series system lifetime, candidate set component indexes plausibly contains failed component index. series system  components, candidate sets subsets , excluding empty set cases observe series system failure. R package mostly concerned masked data takes form (potentially masked) series system lifetime set candidate components. (series system lifetime right censored, candidate set naturally empty since component failed yet.)","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data","text":"can install development version series_system_estimation_masked_data like :","code":"devtools::install_github(\"queelius/series_system_estimation_masked_data\")"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data","text":"basic example shows solve common problem:","code":"#library(series_system_estimation_masked_data)  ## basic example code"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/index.html","id":"todo","dir":"","previous_headings":"","what":"TODO","title":"Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data","text":"might interesting predict system lifetime based candidate covariates. might interesting predict node lifetimes based candidate covariates system lifetime extract sampler related stuff, like random variables (series variations) algebraic_random_elements R package. compare info/cov bootstrap version","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/index.html","id":"the-formula-interface-for-masked-data-model-fitting","dir":"","previous_headings":"","what":"The formula interface for masked data model fitting","title":"Series Systems: Estimating Lifetime Distributions of Unobserved Components with Masked Data","text":"function fit masked data model take two arguments, formula expressing structure model source data; returns object representing fitted model consistent arguments. md function fits masked data model using maximum likelihood estimation estimate parameters parameters latent component lifetimes. takes two arguments, formula expressing structure model source data (data frame, typically). object representing fitted model child md_mle. md_mle inherits mle, defines algebra MLEs.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dexp_series.html","id":null,"dir":"Reference","previous_headings":"","what":"pdf for exponential series. — dexp_series","title":"pdf for exponential series. — dexp_series","text":"pdf exponential series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dexp_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pdf for exponential series. — dexp_series","text":"","code":"dexp_series(t, rates, log = F)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dexp_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pdf for exponential series. — dexp_series","text":"t series system lifetime rates rate parameters exponential component lifetimes log return log pdf","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dgeneral_series.html","id":null,"dir":"Reference","previous_headings":"","what":"pdf for general series — dgeneral_series","title":"pdf for general series — dgeneral_series","text":"pdf general series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dgeneral_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pdf for general series — dgeneral_series","text":"","code":"dgeneral_series(t, theta, nparams, h, R)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dgeneral_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pdf for general series — dgeneral_series","text":"t series system lifetime theta parameter vector evaluate h's R's nparams integer vector, m components, may different number parameters. j-th component nparmas[j] parameters. h list hazard functions R list reliability functions","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dweibull_series.html","id":null,"dir":"Reference","previous_headings":"","what":"pdf for weibull series — dweibull_series","title":"pdf for weibull series — dweibull_series","text":"pdf weibull series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dweibull_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pdf for weibull series — dweibull_series","text":"","code":"dweibull_series(t, scales, shapes)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/dweibull_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pdf for weibull series — dweibull_series","text":"t series system lifetime scales scale parameters weibull component lifetimes shapes shape parameters weibull component lifetimes","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/exp_series_md_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated masked data 1 — exp_series_md_1","title":"Simulated masked data 1 — exp_series_md_1","text":"Simulated masked data exponential series system satisfying conditions C1, C2, C3. See source url information parameters simulation.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/exp_series_md_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated masked data 1 — exp_series_md_1","text":"","code":"exp_series_md_1"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/exp_series_md_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated masked data 1 — exp_series_md_1","text":"data frame 200 rows 10 variables, 5 observable. t Real unobservable variable, system lifetime s Real observable variable, right-censored system lifetime delta Boolean observable variable, indicates whether system lifetime censored k Integer unobservable variable, index failed component t1 Real unobservable variable, lifetime component 1 t2 Real unobservable variable, lifetime component 2 t3 Real unobservable variable, lifetime component 3 x1 Boolean observable variable, TRUE indicates component 1 candidate set x2 Boolean observable variable, TRUE indicates component 2 candidate set x3 Boolean observable variable, TRUE indicates component 3 candidate set","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/exp_series_md_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated masked data 1 — exp_series_md_1","text":"https://github.com/queelius/series_system_estimation_masked_data/blob/master/data-raw/exp_series_md_1.R","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/guo_weibull_series_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Real-world masked data. The source is from the paper,\n","title":"Real-world masked data. The source is from the paper,\n","text":"assume data compatible series system 3 components w/Weibull distributed lifetimes candidate sets satisfy conditions C1, C2, C3.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/guo_weibull_series_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real-world masked data. The source is from the paper,\n","text":"","code":"guo_weibull_series_md"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/guo_weibull_series_md.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Real-world masked data. The source is from the paper,\n","text":"data frame. t Real unobservable variable, system lifetime x1 Boolean observable variable, TRUE indicates component 1 candidate set x2 Boolean observable variable, TRUE indicates component 2 candidate set x3 Boolean observable variable, TRUE indicates component 3 candidate set","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/guo_weibull_series_md.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Real-world masked data. The source is from the paper,\n","text":"https://github.com/queelius/series_system_estimation_masked_data/blob/master/data-raw/guo_weibull_series_md.R","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_exp_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard function for exponential series. — hazard_exp_series","title":"Hazard function for exponential series. — hazard_exp_series","text":"Hazard function exponential series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_exp_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard function for exponential series. — hazard_exp_series","text":"","code":"hazard_exp_series(t, rates, log.p = F)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_exp_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard function for exponential series. — hazard_exp_series","text":"t series system lifetime rates rate parameters exponential component lifetimes log.p return log hazard function","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_general_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard function for general series — hazard_general_series","title":"Hazard function for general series — hazard_general_series","text":"Hazard function general series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_general_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard function for general series — hazard_general_series","text":"","code":"hazard_general_series(t, theta, nparams, h)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_general_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard function for general series — hazard_general_series","text":"t series system lifetime theta parameter vector evaluate h's nparams integer vector, m components, may different number parameters. j-th component nparams[j] parameters. h list hazard functions","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_weibull_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard function for weibull series. — hazard_weibull_series","title":"Hazard function for weibull series. — hazard_weibull_series","text":"Hazard function weibull series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_weibull_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard function for weibull series. — hazard_weibull_series","text":"","code":"hazard_weibull_series(t, scales, shapes)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/hazard_weibull_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard function for weibull series. — hazard_weibull_series","text":"t series system lifetime scales scale parameters weibull component lifetimes shapes shape parameters weibull component lifetimes","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_bernoulli_candidate_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Bernoulli candidate model that is a function of component\ncause of failure. — md_bernoulli_candidate_C1_C2_C3","title":"Bernoulli candidate model that is a function of component\ncause of failure. — md_bernoulli_candidate_C1_C2_C3","text":"Bernoulli candidate model function component cause failure k parameters m p, component cause failure indexed j, j candidate set otherwise component indexed j candidate set probability specified p, may either procedure sampling distribution codomain [0,1] constant function.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_bernoulli_candidate_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bernoulli candidate model that is a function of component\ncause of failure. — md_bernoulli_candidate_C1_C2_C3","text":"","code":"md_bernoulli_candidate_C1_C2_C3(md, m, p = function(n) runif(n))"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_bernoulli_candidate_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bernoulli candidate model that is a function of component\ncause of failure. — md_bernoulli_candidate_C1_C2_C3","text":"md masked data, column k failed component index. m integer, number components candidate set. p function procedure p : integer -> [0,1], defaults function(n) runif(n).","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_info_exp_series_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the observed information matrix for an exponential series system\nwith respect to parameter theta for masked data with candidate sets\nthat approximately satisfy conditions C1, C2, and C3. — md_info_exp_series_C1_C2_C3","title":"Generates the observed information matrix for an exponential series system\nwith respect to parameter theta for masked data with candidate sets\nthat approximately satisfy conditions C1, C2, and C3. — md_info_exp_series_C1_C2_C3","text":"Generates observed information matrix exponential series system respect parameter theta masked data candidate sets approximately satisfy conditions C1, C2, C3.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_info_exp_series_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the observed information matrix for an exponential series system\nwith respect to parameter theta for masked data with candidate sets\nthat approximately satisfy conditions C1, C2, and C3. — md_info_exp_series_C1_C2_C3","text":"","code":"md_info_exp_series_C1_C2_C3(md)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_info_exp_series_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the observed information matrix for an exponential series system\nwith respect to parameter theta for masked data with candidate sets\nthat approximately satisfy conditions C1, C2, and C3. — md_info_exp_series_C1_C2_C3","text":"md masked data candidate sets x1,...,xm meet regular candidate model","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_info_exp_series_C1_C2_C3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the observed information matrix for an exponential series system\nwith respect to parameter theta for masked data with candidate sets\nthat approximately satisfy conditions C1, C2, and C3. — md_info_exp_series_C1_C2_C3","text":"observed information matrix type R^m -> R^(m x m)","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_exp_series_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a log-likelihood for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_loglike_exp_series_C1_C2_C3","title":"Generates a log-likelihood for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_loglike_exp_series_C1_C2_C3","text":"Generates log-likelihood exponential series system respect parameter theta masked data candidate sets approximately satisfy conditions C1, C2, C3.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_exp_series_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a log-likelihood for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_loglike_exp_series_C1_C2_C3","text":"","code":"md_loglike_exp_series_C1_C2_C3(md)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_exp_series_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a log-likelihood for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_loglike_exp_series_C1_C2_C3","text":"md masked data","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_general_series_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])}\nfor any \\code{j,j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_general_series_C1_C2_C3","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])}\nfor any \\code{j,j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_general_series_C1_C2_C3","text":"Masked data approximately satisfies following set conditions: C1: Pr(K[] C[]) = 1 C2: Pr(C[]=c[] | K[]=j, T[]=t[]) = Pr(C[]=c[] | K[]=j', T[]=t[])} \\code{j,j' c[]. C3: masking probabilities independent theta","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_general_series_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])}\nfor any \\code{j,j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_general_series_C1_C2_C3","text":"","code":"md_loglike_general_series_C1_C2_C3(md, nparams, h, R)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_general_series_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])}\nfor any \\code{j,j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_general_series_C1_C2_C3","text":"md masked data nparams integer vector, m components, may different number parameters. j-th component nparmas[j] parameters. h list hazard functions R list survival functions","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_general_series_C1_C2_C3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])}\nfor any \\code{j,j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_general_series_C1_C2_C3","text":"log-likelihood function respect theta given md","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_weibull_series_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])\n    for any j, j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_weibull_series_C1_C2_C3","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])\n    for any j, j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_weibull_series_C1_C2_C3","text":"Masked data approximately satisfies following set conditions: C1: Pr(K[] C[]) = 1 C2: Pr(C[]=c[] | K[]=j, T[]=t[]) = Pr(C[]=c[] | K[]=j', T[]=t[])     j, j' c[]. C3: masking probabilities independent theta","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_weibull_series_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])\n    for any j, j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_weibull_series_C1_C2_C3","text":"","code":"md_loglike_weibull_series_C1_C2_C3(md)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_weibull_series_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])\n    for any j, j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_weibull_series_C1_C2_C3","text":"md masked data","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_loglike_weibull_series_C1_C2_C3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Masked data approximately satisfies the following set of conditions:\nC1: Pr(K[i] in C[i]) = 1\nC2: Pr(C[i]=c[i] | K[i]=j, T[i]=t[i]) = Pr(C[i]=c[i] | K[i]=j', T[i]=t[i])\n    for any j, j' in c[i].\nC3: masking probabilities are independent of theta — md_loglike_weibull_series_C1_C2_C3","text":"log-likelihood function respect theta given md","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_mle_series_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimator of the parameters of a series\nsystem given a sample of masked data according to candidate sets\nthat are generated in a way that is compatible with conditions C1, C2, and\nC3 so that we do not need to know or estimate the distribution of candidate\nsets. — md_mle_series_C1_C2_C3","title":"Maximum likelihood estimator of the parameters of a series\nsystem given a sample of masked data according to candidate sets\nthat are generated in a way that is compatible with conditions C1, C2, and\nC3 so that we do not need to know or estimate the distribution of candidate\nsets. — md_mle_series_C1_C2_C3","text":"Maximum likelihood estimator parameters series system given sample masked data according candidate sets generated way compatible conditions C1, C2, C3 need know estimate distribution candidate sets.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_mle_series_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimator of the parameters of a series\nsystem given a sample of masked data according to candidate sets\nthat are generated in a way that is compatible with conditions C1, C2, and\nC3 so that we do not need to know or estimate the distribution of candidate\nsets. — md_mle_series_C1_C2_C3","text":"","code":"md_mle_series_C1_C2_C3(   loglike,   theta0,   theta.restart = NULL,   sup = function(theta) all(theta > 0),   eps = 1e-05,   restarts = 100L,   max_iter = 250L,   eta = 1,   r = 0.5 )"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_mle_series_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimator of the parameters of a series\nsystem given a sample of masked data according to candidate sets\nthat are generated in a way that is compatible with conditions C1, C2, and\nC3 so that we do not need to know or estimate the distribution of candidate\nsets. — md_mle_series_C1_C2_C3","text":"loglike log-likelihood function theta0 initial guess MLE theta.restart function () -> R^m generating new theta0 restarts, defaults randomly generating values sup support function, defaults components theta positive non-zero eps stopping condition, defaults 1e-05 restarts number restarts , defaults 100 max_iter stop iterations reaches max_iter, default 0 (infinity) eta learning rate, defaults 1 r backtracking line search parameter","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_mle_series_C1_C2_C3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimator of the parameters of a series\nsystem given a sample of masked data according to candidate sets\nthat are generated in a way that is compatible with conditions C1, C2, and\nC3 so that we do not need to know or estimate the distribution of candidate\nsets. — md_mle_series_C1_C2_C3","text":"numeric MLE estimate","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_score_exp_series_C1_C2_C3.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a score function  for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_score_exp_series_C1_C2_C3","title":"Generates a score function  for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_score_exp_series_C1_C2_C3","text":"Generates score function  exponential series system respect parameter theta masked data candidate sets approximately satisfy conditions C1, C2, C3.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_score_exp_series_C1_C2_C3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a score function  for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_score_exp_series_C1_C2_C3","text":"","code":"md_score_exp_series_C1_C2_C3(md)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_score_exp_series_C1_C2_C3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a score function  for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_score_exp_series_C1_C2_C3","text":"md masked data regular candidate model","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_score_exp_series_C1_C2_C3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a score function  for an exponential series system with respect to\nparameter theta for masked data with candidate sets that approximately\nsatisfy conditions C1, C2, and C3. — md_score_exp_series_C1_C2_C3","text":"score function type R^m -> R","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_decorator_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Decorate masked data md with a some measure of the\ndifference between component failure probabilities. — md_series_component_failure_decorator_diff","title":"Decorate masked data md with a some measure of the\ndifference between component failure probabilities. — md_series_component_failure_decorator_diff","text":"Decorate masked data md measure difference component failure probabilities.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_decorator_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decorate masked data md with a some measure of the\ndifference between component failure probabilities. — md_series_component_failure_decorator_diff","text":"","code":"md_series_component_failure_decorator_diff(   md,   pk = \"pk\",   diff = function(r) range(r) )"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_decorator_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decorate masked data md with a some measure of the\ndifference between component failure probabilities. — md_series_component_failure_decorator_diff","text":"md masked data pk prefix label component failure probabilities diff difference measure, defaults range length","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_probability_decorator.html","id":null,"dir":"Reference","previous_headings":"","what":"Component failure probability decorator. — md_series_component_failure_probability_decorator","title":"Component failure probability decorator. — md_series_component_failure_probability_decorator","text":"decorate masked data md estimate probabilities, Pr{K[]=j|T[]=t[],C[])}.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_probability_decorator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Component failure probability decorator. — md_series_component_failure_probability_decorator","text":"","code":"md_series_component_failure_probability_decorator(md, h)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_probability_decorator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Component failure probability decorator. — md_series_component_failure_probability_decorator","text":"md masked data h vector hazard functions component lifetimes series system. h[j] refer hazard function component indexed j.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_probability_decorator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Component failure probability decorator. — md_series_component_failure_probability_decorator","text":"md decorated component probability failures.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_component_failure_probability_decorator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Component failure probability decorator. — md_series_component_failure_probability_decorator","text":"md must columns x1,...,xm representing candidate sets boolean vectors, s t respectively representing right-censored series system lifetime, right-censoring, must also delta representing right-censoring indicator.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates failure times and component cause of failure for a series\nsystem with the given data frame of component lifetimes encoded by\nthe matrix columns prefixed with t in masked data frame md. — md_series_lifetime","title":"Generates failure times and component cause of failure for a series\nsystem with the given data frame of component lifetimes encoded by\nthe matrix columns prefixed with t in masked data frame md. — md_series_lifetime","text":"Generates failure times component cause failure series system given data frame component lifetimes encoded matrix columns prefixed t masked data frame md.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates failure times and component cause of failure for a series\nsystem with the given data frame of component lifetimes encoded by\nthe matrix columns prefixed with t in masked data frame md. — md_series_lifetime","text":"","code":"md_series_lifetime(md)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates failure times and component cause of failure for a series\nsystem with the given data frame of component lifetimes encoded by\nthe matrix columns prefixed with t in masked data frame md. — md_series_lifetime","text":"md data frame indicated component times--failure","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates failure times and component cause of failure for a series\nsystem with the given data frame of component lifetimes encoded by\nthe matrix columns prefixed with t in masked data frame md. — md_series_lifetime","text":"masked data decorated series lifetime component cause failure","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime_right_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates right-censored system failure times s and right-censoring\nindicators delta for a series system with the given data frame of\ncomponent lifetimes encoded by the matrix columns prefixed with t — md_series_lifetime_right_censoring","title":"Generates right-censored system failure times s and right-censoring\nindicators delta for a series system with the given data frame of\ncomponent lifetimes encoded by the matrix columns prefixed with t — md_series_lifetime_right_censoring","text":"Generates right-censored system failure times s right-censoring indicators delta series system given data frame component lifetimes encoded matrix columns prefixed t","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime_right_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates right-censored system failure times s and right-censoring\nindicators delta for a series system with the given data frame of\ncomponent lifetimes encoded by the matrix columns prefixed with t — md_series_lifetime_right_censoring","text":"","code":"md_series_lifetime_right_censoring(md, tau)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime_right_censoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates right-censored system failure times s and right-censoring\nindicators delta for a series system with the given data frame of\ncomponent lifetimes encoded by the matrix columns prefixed with t — md_series_lifetime_right_censoring","text":"md data frame indicated component times--failure tau vector right-censoring times","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/md_series_lifetime_right_censoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates right-censored system failure times s and right-censoring\nindicators delta for a series system with the given data frame of\ncomponent lifetimes encoded by the matrix columns prefixed with t — md_series_lifetime_right_censoring","text":"masked data decorated series lifetime component cause failure","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pexp_series.html","id":null,"dir":"Reference","previous_headings":"","what":"cdf for exponential series. — pexp_series","title":"cdf for exponential series. — pexp_series","text":"cdf exponential series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pexp_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cdf for exponential series. — pexp_series","text":"","code":"pexp_series(t, rates, lower.tail = T, log.p = F)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pexp_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cdf for exponential series. — pexp_series","text":"t series system lifetime rates rate parameters exponential component lifetimes lower.tail logical; logical; TRUE (default), probabilities P[X<=x], otherwise, P[X > x]. log.p return log cdf","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pgeneral_series.html","id":null,"dir":"Reference","previous_headings":"","what":"cdf for general series — pgeneral_series","title":"cdf for general series — pgeneral_series","text":"cdf general series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pgeneral_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cdf for general series — pgeneral_series","text":"","code":"pgeneral_series(t, theta, nparams, R)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pgeneral_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cdf for general series — pgeneral_series","text":"t series system lifetime theta parameter vector evaluate R's nparams integer vector, m components, may different number parameters. j-th component nparmas[j] parameters. R list reliability functions","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pweibull_series.html","id":null,"dir":"Reference","previous_headings":"","what":"The cumulative distribution function for Weibull series — pweibull_series","title":"The cumulative distribution function for Weibull series — pweibull_series","text":"cumulative distribution function Weibull series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pweibull_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The cumulative distribution function for Weibull series — pweibull_series","text":"","code":"pweibull_series(t, scales, shapes)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/pweibull_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The cumulative distribution function for Weibull series — pweibull_series","text":"t series system lifetime scales scale parameters Weibull component lifetimes shapes shape parameters Weibull component lifetimes","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qexp_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Qunatile function for exponential series. — qexp_series","title":"Qunatile function for exponential series. — qexp_series","text":"Qunatile function exponential series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qexp_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Qunatile function for exponential series. — qexp_series","text":"","code":"qexp_series(p, rates, lower.tail = T, log.p = F)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qexp_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Qunatile function for exponential series. — qexp_series","text":"p quantiles rates rate parameters exponential component lifetimes lower.tail logical; TRUE (default), probabilities P[X<=x], otherwise, P[X > x]. log.p return log survival function","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qgeneral_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile function (inverse of the cdf) for a general series system.\nBy definition, the quantile p * 100% is the value t that\nsatisfies F(t) - p = 0. We solve for t using Newton's method. — qgeneral_series","title":"Quantile function (inverse of the cdf) for a general series system.\nBy definition, the quantile p * 100% is the value t that\nsatisfies F(t) - p = 0. We solve for t using Newton's method. — qgeneral_series","text":"Quantile function (inverse cdf) general series system. definition, quantile p * 100% value t satisfies F(t) - p = 0. solve t using Newton's method.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qgeneral_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile function (inverse of the cdf) for a general series system.\nBy definition, the quantile p * 100% is the value t that\nsatisfies F(t) - p = 0. We solve for t using Newton's method. — qgeneral_series","text":"","code":"qgeneral_series(p, theta, nparams, h, R, eps = 0.001, t0 = 1)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qgeneral_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile function (inverse of the cdf) for a general series system.\nBy definition, the quantile p * 100% is the value t that\nsatisfies F(t) - p = 0. We solve for t using Newton's method. — qgeneral_series","text":"p vector probabilities. theta parameter vector evaluate h's R's nparams integer vector, m components, may different number parameters. j-th component nparmas[j] parameters. h list hazard functions R list reliability functions eps stopping condition, default 1e-3 t0 initial guess, default 1","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qweibull_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile function (inverse of the cdf).\nBy definition, the quantile p * 100% for a strictly monotonically increasing\ncdf F is the value t that satisfies F(t) - p = 0.\nWe solve for t using newton's method. — qweibull_series","title":"Quantile function (inverse of the cdf).\nBy definition, the quantile p * 100% for a strictly monotonically increasing\ncdf F is the value t that satisfies F(t) - p = 0.\nWe solve for t using newton's method. — qweibull_series","text":"Quantile function (inverse cdf). definition, quantile p * 100% strictly monotonically increasing cdf F value t satisfies F(t) - p = 0. solve t using newton's method.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qweibull_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile function (inverse of the cdf).\nBy definition, the quantile p * 100% for a strictly monotonically increasing\ncdf F is the value t that satisfies F(t) - p = 0.\nWe solve for t using newton's method. — qweibull_series","text":"","code":"qweibull_series(p, scales, shapes, eps = 0.001, t0 = 1)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/qweibull_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile function (inverse of the cdf).\nBy definition, the quantile p * 100% for a strictly monotonically increasing\ncdf F is the value t that satisfies F(t) - p = 0.\nWe solve for t using newton's method. — qweibull_series","text":"p vector probabilities. scales vector weibull scale parameters weibull lifetime components shapes vector weibull shape parameters weibull lifetime components eps stopping condition, default 1e-3 t0 initial guess, default 1","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rexp_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival function for exponential series. — rexp_series","title":"Survival function for exponential series. — rexp_series","text":"Survival function exponential series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rexp_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival function for exponential series. — rexp_series","text":"","code":"rexp_series(n, rates)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rexp_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival function for exponential series. — rexp_series","text":"n sample size rates rate parameters exponential component lifetimes","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rgeneral_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from a general series system of m components whose hazard\nand reliability functions are respectively given by h and R. — rgeneral_series","title":"Sample from a general series system of m components whose hazard\nand reliability functions are respectively given by h and R. — rgeneral_series","text":"Sample general series system m components whose hazard reliability functions respectively given h R.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rgeneral_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from a general series system of m components whose hazard\nand reliability functions are respectively given by h and R. — rgeneral_series","text":"","code":"rgeneral_series(n, theta, h, R)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rgeneral_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from a general series system of m components whose hazard\nand reliability functions are respectively given by h and R. — rgeneral_series","text":"n sample size theta parameter vector evaluate h's R's h list hazard functions R list reliability functions","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rweibull_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampler for weibull series. — rweibull_series","title":"Sampler for weibull series. — rweibull_series","text":"NOTE: qweibull_series(p=runif(n),scales,shapes) around 6 times slow due using newton's method solve F(t) - p = 0.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rweibull_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampler for weibull series. — rweibull_series","text":"","code":"rweibull_series(n, scales, shapes)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/rweibull_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampler for weibull series. — rweibull_series","text":"n sample size scales scale parameters weibull component lifetimes shapes shape parameters weibull component lifetimes","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/series.system.estimation.masked.data.html","id":null,"dir":"Reference","previous_headings":"","what":"series.system.masked.data: A package for estimating series system\ncomponent lifetime parameters from masked data — series.system.estimation.masked.data","title":"series.system.masked.data: A package for estimating series system\ncomponent lifetime parameters from masked data — series.system.estimation.masked.data","text":"series.system.estimation.masked.data package provides general framework estimating series system lifetime component parameters masked data.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_exp_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival function for exponential series. — survival_exp_series","title":"Survival function for exponential series. — survival_exp_series","text":"Survival function exponential series.","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_exp_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival function for exponential series. — survival_exp_series","text":"","code":"survival_exp_series(t, rates, log.p = F)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_exp_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival function for exponential series. — survival_exp_series","text":"t series system lifetime rates rate parameters exponential component lifetimes log.p return log survival function","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_general_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival function for general series — survival_general_series","title":"Survival function for general series — survival_general_series","text":"Survival function general series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_general_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival function for general series — survival_general_series","text":"","code":"survival_general_series(t, theta, nparams, R)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_general_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival function for general series — survival_general_series","text":"t series system lifetime theta parameter vector evaluate R's nparams integer vector, m components, may different number parameters. j-th component nparams[j] parameters. R list reliability functions","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_weibull_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival function for weibull series — survival_weibull_series","title":"Survival function for weibull series — survival_weibull_series","text":"Survival function weibull series","code":""},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_weibull_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival function for weibull series — survival_weibull_series","text":"","code":"survival_weibull_series(t, scales, shapes)"},{"path":"https://queelius.github.io/series_system_estimation_masked_data/reference/survival_weibull_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival function for weibull series — survival_weibull_series","text":"t series system lifetime scales scale parameters weibull component lifetimes shapes shape parameters weibull component lifetimes","code":""}]
